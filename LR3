import cv2
import numpy as np

def gauss(size,sigma):
    center = size // 2
    kernel = np.zeros((size, size))
    for x in range(size):
        for y in range(size):

            a = center
            b = center

            # Гауссовская функция
            kernel[x, y] = (1 / (2 * np.pi * sigma ** 2)) * np.exp(
                -((x - a) ** 2 + (y - b) ** 2) / (2 * sigma ** 2)
            )

    kernel /= np.sum(kernel)

    print("Матрица свертки:")
    print(kernel)
    
    return kernel

def matrSvert():

    size = 7
    size2 = 3
    sigma2 = 1
    sigma = 2

    image = cv2.imread(r'C:/Users/hexvgon/PycharmProjects/ACOM3/aragorn.jpg', cv2.IMREAD_GRAYSCALE)
    kernel = gauss(size,sigma)
    kernel2 = gauss(size2, sigma2)

    filter_image = cv2.filter2D(image, -1, kernel) # -1 битность не меняется
    filter_image2 = cv2.filter2D(image, -1, kernel2)

    cv2.namedWindow('Original', cv2.WINDOW_NORMAL)
    cv2.imshow('Original', image)
    cv2.namedWindow('Matrix 7x7', cv2.WINDOW_NORMAL)
    cv2.imshow('Matrix 7x7', filter_image)
    cv2.namedWindow('Matrix 3x3', cv2.WINDOW_NORMAL)
    cv2.imshow('Matrix 3x3', filter_image2)

    gas1 = cv2.GaussianBlur(image, (size, size), sigma)
    cv2.namedWindow('Gausse 7x7', cv2.WINDOW_NORMAL)
    cv2.imshow('Gausse 7x7', gas1)
    gas2 = cv2.GaussianBlur(image, (size2, size2), sigma2)
    cv2.namedWindow('Gausse 3x3', cv2.WINDOW_NORMAL)
    cv2.imshow('Gausse 3x3', gas2)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

matrSvert()
